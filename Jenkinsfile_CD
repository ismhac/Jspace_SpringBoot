pipeline {
    agent any

    parameters {
        string(name: 'GIT_SHA', defaultValue: '', description: 'Input GIT SHA to deploy')
        choice(name: 'ENV', choices: ['dev', 'production', 'aiven'], description: 'Select environment to deploy')
    }

    environment {
        ENVIRONMENT = "${params.ENV}"
        SERVICE_NAME = "jspace-service"
        IMAGE_NAME = "${SERVICE_NAME}:${params.GIT_SHA}"
        PORT_CONFIGURATION = "-p 8081:8081"
        CONTAINER_NAME = "${SERVICE_NAME}-${params.GIT_SHA}"
        PROFILE_CONFIGURATION = "-e SPRING_PROFILES_ACTIVE=${params.ENV}"
    }

    stages{
        stage('Pull Image From Docker Hub') {
            steps {
                echo "Pull Image from Docker Hub"
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-account', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD'),
                                     string(credentialsId: 'docker-hub-repo', variable: 'DOCKER_HUB_REPO'),
                                     string(credentialsId: 'jasypt-pw', variable: 'JASYPT_PW')]) {
                        sh "sudo docker login -u ${USERNAME} -p ${PASSWORD}"
                        sh "sudo docker pull ${DOCKER_HUB_REPO}:${params.GIT_SHA}"
                    }
                }
            }
        }

        stage('Stop current') {
            steps {
                script {
                    requiredParameters()
                    echo "Stop previous version"
                    sh "sudo docker ps -q --filter name=${SERVICE_NAME} | xargs -r docker rm -f"
                }
            }
        }

        stage('Deploy EC2') {
            steps {
                script {
                    echo "Deploy to ${ENVIRONMENT}"
                    sh "sudo docker run -dit --name ${CONTAINER_NAME} ${PORT_CONFIGURATION} -e jasypt.encryptor.password=${JASYPT_PW} ${DOCKER_HUB_REPO} ${PROFILE_CONFIGURATION} ${IMAGE_NAME}"
                    sh "sudo docker ps"
                }
            }
        }

    }
}
